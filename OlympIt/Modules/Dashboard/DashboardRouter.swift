//
//  DashboardRouter.swift
//  OlympIt
//
//  Created Nariman on 18.02.2024.
//  Copyright Â© 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Dastan Makhutov @mchutov
//

import UIKit

final class DashboardRouter: DashboardWireframeProtocol {
    
    weak var viewController: UIViewController?
    
    static func createModule() -> UIViewController {
        let view = DashboardViewController()
        let interactor = DashboardInteractor()
        let router = DashboardRouter()
        let presenter = DashboardPresenter(interface: view, interactor: interactor, router: router)
        
        view.presenter = presenter
        interactor.presenter = presenter
        router.viewController = view
        
        return view
    }
    
    func openBottomSheet(executor: AnyObject) {
        let vc = SelectableBottomSheet(delegate: executor)
        viewController?.navigationController?.presentPanModal(vc)
    }
    
    func openLessonsList(initialLessonType: InitialLessonType,type: LessonType, lessonId: String) {
        let vc = LessonsListRouter.createModule(initialLessonType: initialLessonType, type: type, lessonId: lessonId)
        viewController?.dismiss(animated: true)
        viewController?.pushIfPossibleOrPresent(viewController: vc, animated: true, completion: nil)
    }
    func openNewsDetail(with model: NewsModel) {
        let vc = NewsDetailRouter.createModule(news: model)
        viewController?.pushIfPossibleOrPresent(viewController: vc, animated: true, completion: nil)
    }
    
    func openNewsList() {
        let vc = NewsListRouter.createModule()
        viewController?.pushIfPossibleOrPresent(viewController: vc, animated: true, completion: nil)
    }
}
